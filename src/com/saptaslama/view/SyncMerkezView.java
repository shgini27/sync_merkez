/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.saptaslama.view;

import com.saptaslama.controller.SendDataManual;
import com.saptaslama.controller.SendScheduledTask;
import com.saptaslama.controller.SyncDepoManual;
import com.saptaslama.controller.SyncDepoScheduledTask;
import com.saptaslama.controller.SyncMagazaManual;
import com.saptaslama.controller.SyncMagazaScheduledTask;
import java.awt.Color;
import java.awt.Image;
import java.util.Timer;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;

/**
 *
 * @author Shagy
 */
public class SyncMerkezView extends javax.swing.JFrame {
    private static final String GREEN = "0x80CC33";
    private static final String RED = "0xFF0000";

    /**
     * Creates new form Sync
     */
    public SyncMerkezView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        postDate = new javax.swing.JTextField();
        magazaSyncDateField = new javax.swing.JTextField();
        syncButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        depoSyncDateField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        manualSendButton = new javax.swing.JButton();
        manualSyncMagazaBtn = new javax.swing.JButton();
        manualInfoLabel = new javax.swing.JLabel();
        manualSyncDepoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SYNC MERKEZ");
        setIconImage(loadImageIcon());
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("POST DATE:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("MAGAZA SYNC DATE:");

        postDate.setFont(new java.awt.Font("Verdana", 2, 11)); // NOI18N
        postDate.setForeground(new java.awt.Color(204, 204, 204));
        postDate.setText("YYYY/MM/DD hh:MM");
        postDate.setToolTipText("last data sent date");
        postDate.setBorder(BorderFactory.createLineBorder(Color.decode(RED)));
        postDate.setEditable(false);

        magazaSyncDateField.setFont(new java.awt.Font("Verdana", 2, 11)); // NOI18N
        magazaSyncDateField.setForeground(new java.awt.Color(204, 204, 204));
        magazaSyncDateField.setText("YYYY/MM/DD hh:MM");
        magazaSyncDateField.setToolTipText("last udated date from magaza");
        magazaSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(RED)));
        magazaSyncDateField.setEditable(false);

        syncButton.setText("SYNC");
        syncButton.setToolTipText("sync data button");
        syncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncButtonActionPerformed(evt);
            }
        });

        infoLabel.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("DEPO SYNC DATE:");

        depoSyncDateField.setFont(new java.awt.Font("Verdana", 2, 11)); // NOI18N
        depoSyncDateField.setForeground(new java.awt.Color(204, 204, 204));
        depoSyncDateField.setText("YYYY/MM/DD hh:MM");
        depoSyncDateField.setToolTipText("last updated date from depo");
        depoSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(RED)));
        depoSyncDateField.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(syncButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(postDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(magazaSyncDateField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(depoSyncDateField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(infoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(110, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(magazaSyncDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depoSyncDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(syncButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane2.addTab("AUTOMATIC", null, jPanel1, "automatic sync");

        manualSendButton.setText("SEND");
        manualSendButton.setToolTipText("send data button");
        manualSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualSendButtonActionPerformed(evt);
            }
        });

        manualSyncMagazaBtn.setText("SYNC MAGAZA");
        manualSyncMagazaBtn.setToolTipText("sync magaza data button");
        manualSyncMagazaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualSyncMagazaBtnActionPerformed(evt);
            }
        });

        manualInfoLabel.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        manualInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        manualSyncDepoBtn.setText("SYNC DEPO");
        manualSyncDepoBtn.setToolTipText("sync depo data button");
        manualSyncDepoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualSyncDepoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manualSendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manualInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(manualSyncDepoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(manualSyncMagazaBtn)))
                .addGap(75, 75, 75))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(manualInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(manualSendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manualSyncMagazaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manualSyncDepoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jTabbedPane2.addTab("MANUAL", null, jPanel2, "send and sync manual");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void syncButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncButtonActionPerformed
        Timer time = new Timer(); // Instantiate Timer Object
        Timer time2 = new Timer(); // Instantiate Timer Object
        Timer time3 = new Timer(); // Instantiate Timer Object
        SendScheduledTask sendData = new SendScheduledTask(); // Instantiate SheduledTask class
        SyncDepoScheduledTask syncDepo = new SyncDepoScheduledTask();
        SyncMagazaScheduledTask syncMagaza = new SyncMagazaScheduledTask();
        time.schedule(sendData, 0, 1000 * 60 * 30); // Create Repetitively task for every 1 secs
        time2.schedule(syncDepo, 1000 * 60 * 15, 1000 * 60 * 30);
        time3.schedule(syncMagaza, 1000 * 60 * 25, 1000 * 60 * 30);
    }//GEN-LAST:event_syncButtonActionPerformed

    private void manualSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualSendButtonActionPerformed
        if (worker != null) {
            worker.cancel(true);
        }
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    manualInfoLabel.setText("sending...");
                    manualInfoLabel.setForeground(Color.red);
                    SendDataManual sendManual = new SendDataManual();
                    sendManual.sendData(1);//status is 1(manual)
                } catch (Exception ex) {
                    System.err.println("Swing worker Error: " + ex.getMessage());
                }
                return 0;
            }
        };
        worker.execute();
    }//GEN-LAST:event_manualSendButtonActionPerformed

    private void manualSyncMagazaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualSyncMagazaBtnActionPerformed
        if (worker != null) {
            worker.cancel(true);
        }
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    manualInfoLabel.setText("magaza syncing...");
                    manualInfoLabel.setForeground(Color.red);
                    SyncMagazaManual syncManual = new SyncMagazaManual();
                    syncManual.syncData(1);//status is 1(manual)
                } catch (Exception ex) {
                    System.err.println("Swing worker Error: " + ex.getMessage());
                }
                return 0;
            }
        };
        worker.execute();

    }//GEN-LAST:event_manualSyncMagazaBtnActionPerformed

    private void manualSyncDepoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualSyncDepoBtnActionPerformed
        if (worker != null) {
            worker.cancel(true);
        }
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    manualInfoLabel.setText("depo syncing...");
                    manualInfoLabel.setForeground(Color.red);
                    SyncDepoManual syncManual = new SyncDepoManual();
                    syncManual.syncData(1);//status is 1(manual)
                } catch (Exception ex) {
                    System.err.println("Swing worker Error: " + ex.getMessage());
                }
                return 0;
            }
        };
        worker.execute();
    }//GEN-LAST:event_manualSyncDepoBtnActionPerformed

    public static void setText(String date, int status) {
        if (worker != null) {
            worker.cancel(true);
        }
        worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                try {
                    switch (status) {
                        case 1:
                            infoLabel.setText(date);
                            infoLabel.setForeground(Color.red);
                            break;
                        case 2:
                            postDate.setText(date);
                            postDate.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                            infoLabel.setText("sent");
                            infoLabel.setForeground(Color.BLUE);
                            break;
                        case 3:
                            magazaSyncDateField.setText(date);
                            magazaSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                            infoLabel.setText("updated");
                            infoLabel.setForeground(Color.BLUE);
                            break;
                        case 4:
                            manualInfoLabel.setText(date);
                            manualInfoLabel.setForeground(Color.BLUE);
                            break;
                        case 5:
                            depoSyncDateField.setText(date);
                            depoSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                            infoLabel.setText("updated");
                            infoLabel.setForeground(Color.BLUE);
                            break;
                        default:
                            infoLabel.setText("");
                            postDate.setText("YYYY/MM/DD hh:MM");
                            magazaSyncDateField.setText("YYYY/MM/DD hh:MM");
                            depoSyncDateField.setText("YYYY/MM/DD hh:MM");
                            postDate.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                            magazaSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                            depoSyncDateField.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
                    }
                } catch (Exception ex) {
                    System.err.println("Swing worker Error: " + ex.getMessage());
                }
                return 0;
            }
        };
        worker.execute();
    }

    //set icon here
    private Image loadImageIcon(){
        /*URL location = getClass().getResource("C:\\Users\\Shagy\\Documents\\"
                + "NetBeansProjects\\JavaApplication30\\icons\\sync.png");*/
        String location = "icons\\title_icon.png";
        ImageIcon image = new ImageIcon(location);
        return image.getImage();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SyncMerkezView.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SyncMerkezView().setVisible(true);
        });
    }
    private static SwingWorker worker;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField depoSyncDateField;
    public static javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane2;
    public static javax.swing.JTextField magazaSyncDateField;
    public static javax.swing.JLabel manualInfoLabel;
    private javax.swing.JButton manualSendButton;
    private javax.swing.JButton manualSyncDepoBtn;
    private javax.swing.JButton manualSyncMagazaBtn;
    public static javax.swing.JTextField postDate;
    private javax.swing.JButton syncButton;
    // End of variables declaration//GEN-END:variables
}
